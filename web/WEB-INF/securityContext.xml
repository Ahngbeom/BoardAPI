<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <bean id="accessDeniedHandler" class="com.board.api.security.AccessDeniedHandler"/>
    <bean id="loginSuccessHandler" class="com.board.api.security.login.LoginSuccessHandler"/>
    <bean id="loginFailureHandler" class="com.board.api.security.login.LoginFailureHandler"/>

    <bean id="customAuthenticationProcessingFilter" class="com.board.api.security.filter.CustomAuthenticationProcessingFilter">
        <constructor-arg ref="customAuthenticationManager" />
    </bean>
    <bean id="customAuthenticationManager" class="com.board.api.security.filter.CustomAuthenticationManager" >
        <constructor-arg ref="customUserDetailService" />
    </bean>
    <bean id="filterExceptionHandler" class="com.board.api.security.filter.FilterExceptionHandler" />

    <!--    <bean id="customPasswordEncoder" class="security.com.board-api.CustomPasswordEncoder"/>-->
    <bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <bean id="customUserDetailService" class="com.board.api.security.detail.CustomUserDetailService"/>
    <bean id="logoutSuccessHandler" class="com.board.api.security.logout.CustomLogoutSuccessHandler"/>

    <security:client-registrations>
        <security:client-registration registration-id="google"
                                      client-id="701605057235-h15lm743tsj3pmgl05pa53mtgpk3jb2l.apps.googleusercontent.com"
                                      client-secret="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"
                                      provider-id="google"
                                      scope="profile,email"
                                      client-name="client-registration"/>
    </security:client-registrations>

<!--    <bean id="authorizedClientRepository" class="org.springframework.security.oauth2.client.web.AuthenticatedPrincipalOAuth2AuthorizedClientRepository">-->
<!--        <constructor-arg ref="authorizedClientService"/>-->
<!--    </bean>-->
<!--    <bean id="clientRegistrationRepository" class="org.springframework.security.oauth2.client.registration.ClientRegistrationRepository"></bean>-->
<!--    <bean id="authorizedClientService" class="org.springframework.security.oauth2.client.InMemoryOAuth2AuthorizedClientService">-->
<!--        <constructor-arg ref="clientRegistrationRepository"/>-->
<!--    </bean>-->


<!--    <bean id="auth2AuthorizedClientManager" class="org.springframework.security.oauth2.client.AuthorizedClientServiceOAuth2AuthorizedClientManager">-->
<!--        <constructor-arg index="0" ref=""/>-->
<!--        <constructor-arg index="1" ref=""/>-->
<!--    </bean>-->

    <security:http auto-config="true" use-expressions="true" >
<!--    <security:http auto-config="true" use-expressions="true" authentication-manager-ref="CustomAuthenticationManager" >-->
        <security:csrf disabled="true"/>

        <security:intercept-url pattern="/all" access="permitAll()"/>
        <security:intercept-url pattern="/member" access="hasRole('ROLE_MEMBER')"/>
        <security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/**/json" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY"/>

<!--        <security:custom-filter ref="CustomAuthenticationProcessingFilter" before="FORM_LOGIN_FILTER"/>-->
<!--        <security:custom-filter ref="FilterExceptionHandler" before="FORM_LOGIN_FILTER"/>-->
        <security:form-login login-page="/login" login-processing-url="/login" authentication-success-handler-ref="loginSuccessHandler"
                             authentication-failure-handler-ref="loginFailureHandler" authentication-failure-url="/login" />
<!--        <security:logout logout-success-url="/" invalidate-session="true" delete-cookies="JSESSIONID,remember-me" />-->
        <security:logout success-handler-ref="logoutSuccessHandler" invalidate-session="false"/>
        <security:remember-me key="SpringSecurityRememberMe"
                              token-validity-seconds="604800"
                              authentication-success-handler-ref="loginSuccessHandler"
                              user-service-ref="customUserDetailService"/>

        <security:oauth2-login login-processing-url="/login/oauth2/code/google" />




        <!--        <security:access-denied-handler error-page="/accessError" />-->
        <security:access-denied-handler ref="accessDeniedHandler"/>

    </security:http>

    <security:authentication-manager>
        <!--        <security:authentication-provider>-->
        <security:authentication-provider user-service-ref="customUserDetailService">
            <!--            <security:user-service>-->
            <!--                <security:user name="member" password="{noop}member" authorities="ROLE_MEMBER" />-->
            <!--                <security:user name="admin" password="{noop}1234" authorities="ROLE_MEMBER, ROLE_ADMIN" />-->
            <!--            </security:user-service>-->

            <!--            <security:jdbc-user-service-->
            <!--                data-source-ref="dataSource" users-by-username-query=" select userid, password, enabled from users where userid = ?"-->
            <!--                authorities-by-username-query="select username, authority from authorities where username = ?"-->
            <!--            />-->

            <!--            <security:password-encoder ref="customPasswordEncoder" />-->
            <security:password-encoder ref="bCryptPasswordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>


</beans>