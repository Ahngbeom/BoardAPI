<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!--  Authentication  -->
    <bean id="authenticationEntryPoint"
          class="com.perfect.community.api.security.authentication.CustomAuthenticationEntryPoint"/>
    <bean id="customAccessDeniedHandler"
          class="com.perfect.community.api.security.authentication.CustomAccessDeniedHandler"/>

    <!--  Login Handler  -->
    <bean id="loginSuccessHandler"
          class="com.perfect.community.api.security.authentication.CustomAuthenticationSuccessHandler"/>
    <bean id="loginFailureHandler"
          class="com.perfect.community.api.security.authentication.CustomAuthenticationFailureHandler"/>

    <!--  Logout Handler  -->
    <bean id="logoutSuccessHandler"
          class="com.perfect.community.api.security.authentication.CustomLogoutSuccessHandler"/>

    <!--  Customize UserDetailService  -->
    <bean id="customUserDetailService" class="com.perfect.community.api.security.detail.CustomUserDetailService"/>

    <!--  BCryptPasswordEncoder  -->
    <bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!--  Customize UsernamePasswordAuthenticationFilter for JSON  -->
    <bean id="jsonUsernamePasswordAuthenticationFilter"
          class="com.perfect.community.api.security.filter.JsonUsernamePasswordAuthenticationFilter">
        <constructor-arg name="jwtTokenProvider" ref="jwtTokenProvider"/>
        <constructor-arg name="objectMapper" ref="objectMapper"/>
        <constructor-arg name="authenticationSuccessHandler" ref="loginSuccessHandler"/>
        <constructor-arg name="authenticationFailureHandler" ref="loginFailureHandler"/>
    </bean>

    <!--  JWT Authentication  -->
    <bean id="jwtTokenProvider" class="com.perfect.community.api.jwt.JwtTokenProvider">
        <constructor-arg name="redisTemplate" ref="redisTemplate"/>
    </bean>
    <bean id="jwtExceptionFilter" class="com.perfect.community.api.jwt.JwtExceptionFilter"/>
    <bean id="jwtAuthenticationFilter" class="com.perfect.community.api.jwt.JwtAuthenticationFilter">
        <constructor-arg name="redisTemplate" ref="redisTemplate"/>
    </bean>

    <bean id="jwtFilterOrder" class="org.springframework.web.filter.CompositeFilter">
        <property name="filters">
            <list>
                <ref bean="jwtExceptionFilter"/>
                <ref bean="jsonUsernamePasswordAuthenticationFilter"/>
                <ref bean="jwtAuthenticationFilter"/>
            </list>
        </property>
    </bean>

    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider user-service-ref="customUserDetailService">
            <security:password-encoder ref="bCryptPasswordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <security:http auto-config="false" use-expressions="true" entry-point-ref="authenticationEntryPoint"
                   authentication-manager-ref="authenticationManager" create-session="stateless">

        <security:csrf disabled="true"/>

        <security:access-denied-handler ref="customAccessDeniedHandler"/>

        <!--        <security:headers>-->
        <!--            &lt;!&ndash;     동일한 도메인의 모든 요청을 허용하는 X-Frame-Options       &ndash;&gt;-->
        <!--            <security:frame-options policy="SAMEORIGIN"/>-->
        <!--            &lt;!&ndash;     HTTP 엄격한 전송 보안(HSTS)       &ndash;&gt;-->
        <!--            <security:hsts disabled="true"/>-->
        <!--        </security:headers>-->

<!--        <security:custom-filter ref="jsonUsernamePasswordAuthenticationFilter" position="FORM_LOGIN_FILTER"/>-->
        <security:custom-filter ref="jwtFilterOrder" before="FORM_LOGIN_FILTER"/>

        <!--        <security:session-management session-authentication-error-url="/error">-->
        <!--            <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />-->
        <!--        </security:session-management>-->

        <security:logout logout-url="/api/logout" success-handler-ref="logoutSuccessHandler" invalidate-session="false"/>

        <security:remember-me key="PerfectCommunity-Spring-Security-Remember-Me-By-Ahngbeom"
                              token-validity-seconds="604800"
                              authentication-success-handler-ref="loginSuccessHandler"
                              user-service-ref="customUserDetailService"
                              remember-me-parameter="remember-me"/>

        <!--        <security:oauth2-login login-processing-url="/login/oauth2/code/google" />-->

    </security:http>

</beans>