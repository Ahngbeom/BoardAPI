<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.board.api.mapper.user.UserMapper">
    <resultMap id="userMap" type="com.board.api.dto.user.UserDTO">
        <id property="userId" column="user_id"/>
<!--        <result property="userId" column="user_id"/>-->
        <result property="password" column="password"/>
        <result property="userName" column="username"/>
        <result property="enabled" column="enabled"/>
        <result property="regDate" column="regDate"/>
        <result property="updateDate" column="updateDate"/>
    </resultMap>

    <resultMap id="userWithAuthorityMap" type="com.board.api.dto.user.UserDTO">
        <id property="userId" column="user_id"/>
<!--        <result property="userId" column="user_id"/>-->
        <result property="password" column="password"/>
        <result property="userName" column="username"/>
        <result property="enabled" column="enabled"/>
        <result property="regDate" column="regDate"/>
        <result property="updateDate" column="updateDate"/>
        <collection property="authList" resultMap="com.board.api.mapper.auth.AuthMapper.usersAuthoritiesMap">
        </collection>
    </resultMap>

    <select id="readMemberByUserId" resultMap="userWithAuthorityMap">
        select users.user_id, password, username, enabled, regDate, updateDate, authority
        from users
                 LEFT OUTER JOIN users_authorities on users.user_id = users_authorities.user_id
        where users.user_id = #{userId};
    </select>

    <select id="readMemberByUserName" resultMap="userWithAuthorityMap">
        select users.user_id, password, username, enabled, regDate, updateDate, authority
        from users
                 LEFT OUTER JOIN users_authorities on users.user_id = users_authorities.user_id
        where users.username = #{userName};
    </select>

    <select id="readAllMember" resultMap="userWithAuthorityMap">
        select users.user_id,
               password,
               username,
               enabled,
               regDate,
               updateDate,
               authority,
               users_authorities.user_id
        from users
                 LEFT OUTER JOIN users_authorities on users.user_id = users_authorities.user_id
        order by field(authority, 'ROLE_ADMIN', 'ROLE_MEMBER') DESC, users.user_id;
    </select>

    <select id="readAuthMember" resultType="com.board.api.dto.auth.AuthorityDTO">
        select user_id, authority
        from users_authorities
        where user_id like #{userId};
    </select>

    <delete id="deleteUser">
        delete
        from users
        where users.user_id like #{userId};
    </delete>

    <insert id="insertMember" parameterType="com.board.api.dto.user.UserDTO">
        insert into users(user_id, password, username)
        values (#{userId}, #{password}, #{userName});
    </insert>

    <update id="updateUser" parameterType="com.board.api.dto.user.UserDTO">
        update users
        set password = #{password},
            username = #{userName}
        where user_id = #{userId};
    </update>

    <insert id="insertAuthorityToMember" parameterType="com.board.api.dto.auth.AuthorityDTO">
        insert into users_authorities(user_id, authority)
        values (#{userId}, #{authority});
    </insert>

    <delete id="deleteOneAuthorityToMember">
        delete
        from users_authorities
        where user_id like #{userId}
          and authority like #{authority};
    </delete>

    <delete id="deleteAllAuthorityToMember">
        delete
        from users_authorities
        where user_id like #{userId};
    </delete>

    <update id="disableMember">
        update users
        set enabled = false
        where user_id like #{userId};
    </update>

    <update id="enableMember">
        update users
        set enabled = true
        where user_id like #{userId};
    </update>

    <select id="getEncodePassword" resultType="String">
        select password
        from users
        where user_id = #{userId};
    </select>

</mapper>
