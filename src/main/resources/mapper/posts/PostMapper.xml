<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.perfect.community.api.mapper.post.PostMapper">

    <resultMap id="postEntityMap" type="com.perfect.community.api.entity.post.PostEntity">
        <id property="pno" column="pno"/>
        <result property="boardNo" column="board_no"/>
        <result property="type" column="type"/>
        <result property="title" column="title"/>
        <result property="contents" column="contents"/>
        <result property="writer" column="writer"/>
        <result property="regDate" column="reg_date"/>
        <result property="updateDate" column="update_date"/>
    </resultMap>

    <select id="countPosts" resultType="long">
        select count(pno) as count
        <choose>
            <when test="page gt 0">
                from (
                select pno
                from posts
                limit ${(page - 1) * 10}, 10
                ) as by_page
            </when>
            <otherwise>
                from posts
            </otherwise>
        </choose>
        <where>
            <if test="boardNo gt 0">
                board_no = #{boardNo}
            </if>
            <if test="type != null">
                and type like #{type}
            </if>
        </where>

    </select>

    <select id="selectPostList" resultMap="postEntityMap">
        select pno, board_no, type, title, contents, writer, reg_date, update_date
        from posts
        <where>
            <if test="boardNo > 0">
                board_no = #{boardNo}
            </if>
            <if test="type != null">
                AND type like #{type}
            </if>
            <if test="keyword != null">
                AND (title like concat('%', #{keyword}, '%') OR contents like concat('%', #{keyword}, '%'))
            </if>
        </where>
        <if test="page > 0">
            limit ${(page - 1) * 10}, 10
        </if>
        order by reg_date desc
    </select>

    <select id="selectPostInfoByPno" resultMap="postEntityMap">
        select pno, board_no, type, title, contents, writer, reg_date, update_date
        from posts
        where pno = #{pno};
    </select>

    <insert id="insertPost" parameterType="com.perfect.community.api.entity.post.PostEntity" useGeneratedKeys="true" keyProperty="pno">
        insert into posts (board_no, type, title, contents, writer)
        values (#{boardNo}, UPPER(#{type}), #{title}, #{contents}, #{writer});
    </insert>

    <update id="updatePost">
        update posts
        set board_no = #{boardNo},
            type = UPPER(#{type}),
            title = #{title},
            contents = #{contents},
            update_date = NOW()
        where pno = #{pno}
    </update>

    <delete id="deletePost">
        delete
        from posts
        where pno = #{pno}
    </delete>

    <delete id="deletePostByBoardNo">
        delete
        from posts
        where board_no = #{boardNo};
    </delete>

    <delete id="deleteAllPosts">
        delete
        from posts
        where pno > 0
    </delete>

    <select id="isWriter" resultType="java.lang.Boolean">
        select if(count(*) = 1, 1, 0)
        from posts
        where pno = #{pno} and writer like #{userId}
    </select>
</mapper>