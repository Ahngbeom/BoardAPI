<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.perfect.community.api.mapper.post.PostMapper">

    <resultMap id="postDTOMap" type="com.perfect.community.api.dto.post.PostDTO">
        <id property="postNo" column="post_no"/>
        <result property="boardNo" column="board_no"/>
        <result property="type" column="type"/>
        <result property="title" column="title"/>
        <result property="contents" column="contents"/>
        <result property="writer" column="writer"/>
        <result property="regDate" column="reg_date"/>
        <result property="updateDate" column="update_date"/>
        <result property="views" column="views"/>
        <result property="recommend" column="recommend"/>
        <result property="notRecommend" column="not_recommend"/>
    </resultMap>

    <select id="countPosts" resultType="long">
        select count(post_no) as count
        <choose>
            <when test="page gt 0">
                from (
                select post_no
                from posts
                limit ${(page - 1) * 10}, 10
                ) as by_page
            </when>
            <otherwise>
                from posts
            </otherwise>
        </choose>
        <where>
            <if test="boardNo gt 0">
                board_no = #{boardNo}
            </if>
            <if test="type != null">
                and type like #{type}
            </if>
        </where>
    </select>

    <select id="selectPostList" resultMap="postDTOMap">
        select posts.post_no, board_no, type, title, contents, writer, reg_date, update_date, views, recommend,
        not_recommend
        from posts
        left join perfect_community.post_views pv on posts.post_no = pv.post_no
        left join perfect_community.post_recommend pr on posts.post_no = pr.post_no
        <where>
            <if test="boardNo > 0">
                board_no = #{boardNo}
            </if>
            <if test="type != null">
                AND type like #{type}
            </if>
            <if test="keyword != null">
                AND (title like concat('%', #{keyword}, '%') OR contents like concat('%', #{keyword}, '%'))
            </if>
        </where>
        order by reg_date desc
        <if test="page > 0">
            limit ${(page - 1) * 10}, 10
        </if>
    </select>

    <select id="selectPostInfoByPno" resultMap="postDTOMap">
        select post_no,
               board_no,
               type,
               title,
               contents,
               writer,
               reg_date,
               update_date
        from posts
        where post_no = #{post_no};
    </select>

    <insert id="insertPost" useGeneratedKeys="true" keyProperty="post_no"
            parameterType="com.perfect.community.api.vo.post.PostVO">
        insert into posts (board_no, type, title, contents, writer)
        values (#{board_no}, UPPER(#{type}), #{title}, #{contents}, #{writer});
    </insert>

    <update id="updatePost">
        update posts
        set board_no    = #{board_no},
            type        = UPPER(#{type}),
            title       = #{title},
            contents    = #{contents},
            update_date = NOW()
        where post_no = #{post_no}
    </update>

    <delete id="deletePost">
        delete
        from posts
        where post_no = #{pno}
    </delete>

    <delete id="deletePostByBoardNo">
        delete
        from posts
        where board_no = #{board_no};
    </delete>

    <delete id="deleteAllPosts">
        delete
        from posts
        where post_no > 0
    </delete>

    <select id="isWriter" resultType="java.lang.Boolean">
        select if(count(*) = 1, 1, 0)
        from posts
        where post_no = #{pno}
          and writer like #{userId}
    </select>
</mapper>