<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.board.api.mapper.PostCRUD_Mapper">

    <resultMap id="postMap" type="com.board.api.dto.PostDTO">
        <id property="pno" column="pno"/>
        <result property="pno" column="pno"/>
        <result property="type" column="type"/>
        <result property="title" column="title"/>
        <result property="contents" column="contents"/>
        <result property="writer" column="writer"/>
        <result property="regDate" column="regDate"/>
        <result property="updateDate" column="updateDate"/>
        <collection property="writtenByMember" resultMap="memberMap"/>
    </resultMap>

<!--    <resultMap id="memberMap" type="com.board.api.dto.UserDTO">-->
<!--        <id property="userId" column="userid"/>-->
<!--        <result property="userId" column="userid"/>-->
<!--        <result property="password" column="password"/>-->
<!--        <result property="userName" column="username"/>-->
<!--        <result property="enabled" column="enabled"/>-->
<!--        <result property="regDate" column="regDate"/>-->
<!--        <result property="updateDate" column="updateDate"/>-->
<!--    </resultMap>-->

    <select id="countBoard" resultType="long">
        select count(*) as count
        from posts;
    </select>

    <select id="selectBoardList" resultType="com.board.api.dto.PostDTO">
        select pno, type, title, contents, writer, regdate, updatedate
        from posts
        order by updatedate, pno DESC;
    </select>

    <select id="selectBoardListWithPage" resultType="com.board.api.dto.PostDTO">
        select pno, type, title, contents, writer, regdate, updatedate
        from posts
        <if test="type != null">
            where type = #{type}
        </if>
        order by updatedate desc
        limit ${(page - 1) * 10}, 10;
    </select>

    <select id="selectBoardByBno" resultType="com.board.api.dto.PostDTO">
        select pno, type, title, contents, writer, regdate, updatedate
        from posts
        where pno = #{pno};
    </select>

    <insert id="insertBoard" parameterType="com.board.api.dto.PostDTO" useGeneratedKeys="true" keyProperty="pno">
        insert into posts (type, title, contents, writer)
        values (UPPER(#{type}), #{title}, #{contents}, #{writer});
    </insert>

    <update id="updatePost">
        update posts
        set type = UPPER(#{type}),
            title      = #{title},
            contents    = #{contents},
            updatedate = NOW()
        where pno = #{pno}
    </update>

    <delete id="deleteBoard">
        delete
        from posts
        where pno = #{pno}
    </delete>

    <delete id="deleteAllBoard">
        delete
        from posts
        where pno > 0
    </delete>

<!--    <select id="initAutoIncrement" resultType="long">-->
<!--        alter table posts-->
<!--            auto_increment = 1;-->
<!--        set @COUNT = 0;-->
<!--        update posts-->
<!--        set pno = @COUNT := @COUNT + 1-->
<!--        where pno > 0;-->
<!--        select Auto_increment-->
<!--        from information_schema.tables-->
<!--        where TABLE_SCHEMA = 'board_db'-->
<!--          and TABLE_NAME = 'posts';-->
<!--    </select>-->

</mapper>